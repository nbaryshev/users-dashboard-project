{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/new-user/new-user.component.ts","webpack:///src/app/dashboard/new-user/new-user.component.html","webpack:///src/app/dashboard/profile-view/profile-view.component.ts","webpack:///src/app/dashboard/profile-view/profile-view.component.html","webpack:///src/app/dashboard/user/user.component.ts","webpack:///src/app/dashboard/user/user.component.html","webpack:///src/app/services/users-api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","DashboardComponent","usersApi","isLoaded","faCoffee","setActiveUser","user","activeUser","username","deleteUser","usersDetails","results","getUsersDetails","usersData","NewUserComponent","openAddUser","toggleForm","onSubmit","addNewUser","userForm","value","reset","alert","error","userName","required","name","secondName","age","country","city","cell","ProfileViewComponent","UserComponent","UsersApiService","http","get","toPromise","resp","err","console","log","reject","userNameUniqCheck","newUser","email","login","dob","first","last","location","picture","large","thumbnail","registered","date","Date","push","userNameExists","some","elem","index","findIndex","splice","providedIn","environment","production","bootstrapModule"],"mappings":";;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,iBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,mC;AAAA;AAAA;ACPzB;;AACE;;AAA0B;;AAA2B;;AACvD;;AAEA;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA6BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBANJ,CACP,uEADO,EAEP,qEAFO,EAGP,kEAHO,EAIP,kFAJO,CAMI;;;;0HAGFA,S,EAAS;AAAA,uBAflB,2DAekB,EAdlB,iFAckB,EAblB,uFAakB,EAZlB,4EAYkB,EAXlB,mGAWkB;AAXE,kBAGpB,uEAHoB,EAIpB,qEAJoB,EAKpB,kEALoB,EAMpB,kFANoB;AAWF,O;AALD,K;;;;;sEAKRA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,iFAFY,EAGZ,uFAHY,EAIZ,4EAJY,EAKZ,mGALY,CADN;AAQRC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,kEAHO,EAIP,kFAJO,CARD;AAcRC,mBAAS,EAAE,EAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BtB;;AAAwC;;AAAW;;AAAW;;AAAW;;AAAW;;;;;;;;AAM9E;;AAEE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AACA;;AAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsD;;AACnF;;;;;;;;AAJI;;AAAA;;AAGO;;AAAA;;;;;;AAZjB;;AACE;;AACA;;AACA;;AACE;;AACE;;AASF;;AACA;;AACF;;AACF;;;;;;AAXQ;;AAAA;;AASc;;AAAA;;;;QCPTC,kB;AAOX,kCAAoBC,QAApB,EAA+C;AAAA;;AAAA;;AAA3B,aAAAA,QAAA,GAAAA,QAAA;AAHpB,aAAAC,QAAA,GAAW,KAAX;AACA,aAAAC,QAAA,GAAW,yEAAX;;AAKA,aAAAC,aAAA,GAAgB,UAACC,IAAD,EAAU;AACxB,eAAI,CAACC,UAAL,GAAkBD,IAAlB;AACD,SAFD;;AAIA,yBAAS,UAACE,QAAD,EAAc;AACrB,eAAI,CAACN,QAAL,CAAcO,UAAd,CAAyBD,QAAzB;;AACA,eAAI,CAACD,UAAL,GAAkB,KAAI,CAACG,YAAL,CAAkBC,OAAlB,CAA0B,CAA1B,CAAlB;AACD,SAHD;AAPkD;;;;eAY5C,oBAAW;;;;;;;AACf,2BAAM,KAAKT,QAAL,CAAcU,eAAd,EAAN;;;AACA,yBAAKF,YAAL,GAAoB,KAAKR,QAAL,CAAcW,SAAlC;AACA,yBAAKN,UAAL,GAAkB,KAAKG,YAAL,CAAkBC,OAAlB,CAA0B,CAA1B,CAAlB;AACA,yBAAKR,QAAL,GAAgB,IAAhB;;;;;;;;;AACD;;;;;;;uBAxBUF,kB,EAAkB,4I;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,kX;AAAA;AAAA;ADT/B;;AACA;;;;AADsB;;AACe;;AAAA;;;;;;;;;sECQxBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTR,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;ACT/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AACE;;AACE;;AACE;;AAAK;;AAAc;;AAAS;;AAAQ;;AAAwE;;AAC5G;;AAAK;;AAAc;;AAAK;;AAAQ;;AAA+D;;AAC/F;;AAAK;;AAAc;;AAAY;;AAAQ;;AAA6E;;AACpH;;AAAK;;AAAc;;AAAI;;AAAQ;;AAAgE;;AACjG;;AACA;;AACE;;AAAK;;AAAc;;AAAQ;;AAAQ;;AAAqE;;AACxG;;AAAK;;AAAc;;AAAK;;AAAQ;;AAA+D;;AAC/F;;AAAK;;AAAc;;AAAK;;AAAQ;;AAAgE;;AAClG;;AACF;;AACA;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAAM;;AACxF;;;;;;AAdQ;;AAAA;;AAaE;;AAAA;;;;QDPCmB,gB;AAKX,gCAAoBZ,QAApB,EAA+C;AAAA;;AAAA;;AAA3B,aAAAA,QAAA,GAAAA,QAAA;AAHpB,aAAAa,WAAA,GAAc,KAAd;;AAKA,aAAAC,UAAA,GAAa,YAAM;AACjB,gBAAI,CAACD,WAAL,GAAmB,CAAC,MAAI,CAACA,WAAzB;AACD,SAFD;;AAIA,aAAAE,QAAA,GAAW,YAAM;AACf,gBAAI,CAACf,QAAL,CAAcgB,UAAd,CAAyB,MAAI,CAACC,QAAL,CAAcC,KAAvC,EACCrC,IADD,CAEE,UAACqC,KAAD,EAAW;AACT,kBAAI,CAACJ,UAAL;;AACA,kBAAI,CAACG,QAAL,CAAcE,KAAd;;AACAC,iBAAK,CAACF,KAAD,CAAL;AACD,WANH,EAOE,UAACG,KAAD,EAAW;AACTD,iBAAK,CAACC,KAAD,CAAL;AACD,WATH;AAWD,SAZD;AANkD;;;;eAoBlD,oBAAQ;AACN,eAAKJ,QAAL,GAAgB,IAAI,wDAAJ,CAAc;AAC5BK,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,QAA/B,CADkB;AAE5BC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,QAA/B,CAFsB;AAG5BE,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,QAA/B,CAHgB;AAI5BG,eAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWH,QAA/B,CAJuB;AAK5BI,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWJ,QAA/B,CALmB;AAM5BK,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWL,QAA/B,CANsB;AAO5BM,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWN,QAA/B;AAPsB,WAAd,CAAhB;AASD;;;;;;;uBAnCUX,gB,EAAgB,mJ;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,c;AAAA,a;AAAA,svB;AAAA;AAAA;ACT7B;;AACE;;AAAQ;AAAA,mBAAS,IAAAE,UAAA,EAAT;AAAqB,WAArB;;AAAmD;;AAAc;;AACzE;;AAgBF;;;;AAhBO;;AAAA;;;;;;;;;sEDOMF,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTrB,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;AET7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaqC,oB;AAGX,sCAAc;AAAA;AAAG;;;;eAEjB,oBAAQ,CACP;;;;;;;uBANUA,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,oP;AAAA;AAAA;ACRjC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAuB;;AAAQ;;AAAU;;AAAU;;AAA0C;;AAC7F;;AAAuB;;AAAQ;;AAAI;;AAAU;;AAAkB;;AAC/D;;AAAuB;;AAAQ;;AAAM;;AAAU;;AAAgB;;AAC/D;;AAAuB;;AAAQ;;AAAK;;AAAU;;AAAe;;AAC/D;;AACA;;AACE;;AAAuB;;AAAQ;;AAAQ;;AAAU;;AAA2B;;AAC5E;;AAAuB;;AAAQ;;AAAK;;AAAU;;AAAwB;;AACtE;;AAAuB;;AAAQ;;AAAS;;AAAU;;AAAyB;;AAC3E;;AAAuB;;AAAQ;;AAAW;;AAAU;;;;AAA4C;;AAClG;;AACF;;AACF;;AACF;;AACF;;;;AApBa;;AAAA;;AAA+B;;AAMiB;;AAAA;;AACN;;AAAA;;AACE;;AAAA;;AACD;;AAAA;;AAGG;;AAAA;;AACH;;AAAA;;AACI;;AAAA;;AACE;;AAAA;;;;;;;;;sEDXjDA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTvC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;gBAC9B;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASasC,a;AAGX,6BAAoB/B,QAApB,EAA8C;AAAA;;AAA1B,aAAAA,QAAA,GAAAA,QAAA;AAA6B;;;;eAEjD,oBAAQ,CACP;;;;;;;uBANU+B,a,EAAa,mJ;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,mF;AAAA;AAAA;ACT1B;;AACE;;AACA;;AACE;;AAAK;;AAAQ;;AAAK;;AAAU;;AAAsC;;AAClE;;AAAK;;AAAQ;;AAAQ;;AAAU;;AAAyB;;AACxD;;AAAK;;AAAQ;;AAAK;;AAAU;;AAAa;;AAC3C;;AACF;;;;AANO;;AAAA;;AAAiC;;AAER;;AAAA;;AACG;;AAAA;;AACH;;AAAA;;;;;;;;sEDInBA,a,EAAa;cALzB,uDAKyB;eALf;AACTxC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;gBACvB;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMauC,e,GAGX,yBAAoBC,IAApB,EAAqC;AAAA;;AAAA;;AAAjB,WAAAA,IAAA,GAAAA,IAAA;;AAEpB,WAAAvB,eAAA,GAAkB,YAAM;AACtB,eAAO,MAAI,CAACuB,IAAL,CAAUC,GAAV,CAAc,MAAd,EACJC,SADI,GAEJtD,IAFI,CAEC,UAACuD,IAAD,EAAU;AAAC,gBAAI,CAACzB,SAAL,GAAiByB,IAAjB;AAAuB,SAFnC,WAGE,UAAAC,GAAG;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,SAHL,CAAP;AAID,OALD;;AAOA,WAAArB,UAAA,GAAa,UAACZ,IAAD,EAAU;AACrB,eAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAU4D,MAAV,EAAqB;AACtC,cAAI,CAAC,MAAI,CAACC,iBAAL,CAAuBrC,IAAI,CAACkB,QAA5B,CAAL,EAA4C;AAC1C,gBAAIoB,OAAO,GAAG;AACZC,mBAAK,EAAEvC,IAAI,CAACuC,KADA;AAEZC,mBAAK,EAAE;AAAEtC,wBAAQ,EAAEF,IAAI,CAACkB;AAAjB,eAFK;AAGZO,kBAAI,EAAEzB,IAAI,CAACyB,IAHC;AAIZgB,iBAAG,EAAE;AAAEnB,mBAAG,EAAEtB,IAAI,CAACsB;AAAZ,eAJO;AAKZF,kBAAI,EAAE;AAAEsB,qBAAK,EAAE1C,IAAI,CAACoB,IAAd;AAAoBuB,oBAAI,EAAE3C,IAAI,CAACqB;AAA/B,eALM;AAMZuB,sBAAQ,EAAE;AAAErB,uBAAO,EAAEvB,IAAI,CAACuB,OAAhB;AAAyBC,oBAAI,EAAExB,IAAI,CAACwB;AAApC,eANE;AAOZqB,qBAAO,EAAE;AAAEC,qBAAK,EAAE,sBAAT;AAAiCC,yBAAS,EAAE;AAA5C,eAPG;AAQZC,wBAAU,EAAE;AAACC,oBAAI,EAAE,IAAIC,IAAJ;AAAP;AARA,aAAd;;AAUA,kBAAI,CAAC3C,SAAL,CAAeF,OAAf,CAAuB8C,IAAvB,CAA4Bb,OAA5B;;AACA9D,mBAAO,CAAC,6BAAD,CAAP;AACD,WAbD,MAaO;AACL4D,kBAAM,CAAC,wCAAD,CAAN;AACD;AAEF,SAlBM,CAAP;AAoBD,OArBD;;AAuBA,WAAAC,iBAAA,GAAoB,UAACnC,QAAD,EAAc;AAChC,YAAIkD,cAAc,GAAG,KAArB;;AAEA,YAAI,MAAI,CAAC7C,SAAL,CAAeF,OAAf,CAAuBgD,IAAvB,CAA4B,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACd,KAAL,CAAWtC,QAAX,KAAwBA,QAA5B;AAAA,SAAhC,CAAJ,EAA2E;AACzEkD,wBAAc,GAAG,IAAjB;AACD;;AACD,eAAOA,cAAP;AACD,OAPD,CAhCqC,CAyCrC;;;AACA,WAAAjD,UAAA,GAAa,UAACD,QAAD,EAAc;AACzB,YAAIqD,KAAK,GAAG,MAAI,CAAChD,SAAL,CAAeF,OAAf,CAAuBmD,SAAvB,CAAiC,UAAAF,IAAI;AAAA,iBAAIA,IAAI,CAACd,KAAL,CAAWtC,QAAX,IAAuBA,QAA3B;AAAA,SAArC,CAAZ;;AACA,cAAI,CAACK,SAAL,CAAeF,OAAf,CAAuBoD,MAAvB,CAA8BF,KAA9B,EAAqC,CAArC;AACD,OAHD;AA1CwC,K;;;uBAH7B3B,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV8B,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA5B,GAAG;AAAA,aAAIC,OAAO,CAACjB,KAAR,CAAcgB,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'users-dashboard';\n}\n","<header>\n  <div class=\"project-name\">Employee Profiles Dashboard</div>\n</header>\n\n<app-dashboard></app-dashboard>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NewUserComponent } from './dashboard/new-user/new-user.component';\nimport { UserComponent } from './dashboard/user/user.component';\nimport { ProfileViewComponent } from './dashboard/profile-view/profile-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    NewUserComponent,\n    UserComponent,\n    ProfileViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"lds-ring\" *ngIf=\"!isLoaded\"><div></div><div></div><div></div><div></div></div>\n<div class=\"users-dashboard-wrapper\" *ngIf=\"isLoaded\">\n  <app-new-user></app-new-user>\n  <hr class=\"horizontal-line\">\n  <div class=\"users-dashboard\">\n    <div class=\"user-cards\">\n      <div class=\"user-card\"\n        *ngFor=\"let user of usersDetails.results\">\n        <app-user \n          class=\"user\"\n          [user]=\"user\"\n          (click)=\"setActiveUser(user)\">\n        </app-user>\n        <fa-icon [icon]=\"faCoffee\" (click)=delete(user.login.username) alt=\"Delete user\"></fa-icon>\n      </div>\n    </div>\n    <app-profile-view [active]=\"activeUser\"></app-profile-view>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersApiService } from '../services/users-api.service';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  \n  usersDetails: any;\n  activeUser: any;\n  isLoaded = false\n  faCoffee = faTrash;\n\n  constructor(private usersApi: UsersApiService) { }\n\n\n  setActiveUser = (user) => {\n    this.activeUser = user;\n  }\n\n  delete = (username) => {\n    this.usersApi.deleteUser(username);\n    this.activeUser = this.usersDetails.results[0]\n  }\n\n  async ngOnInit() {\n    await this.usersApi.getUsersDetails()\n    this.usersDetails = this.usersApi.usersData;\n    this.activeUser = this.usersDetails.results[0]\n    this.isLoaded = true\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersApiService } from 'src/app/services/users-api.service';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.scss']\n})\nexport class NewUserComponent implements OnInit {\n\n  openAddUser = false;\n  userForm: FormGroup;\n\n  constructor(private usersApi: UsersApiService) { }\n\n  toggleForm = () => {\n    this.openAddUser = !this.openAddUser;\n  }\n\n  onSubmit = () => {\n    this.usersApi.addNewUser(this.userForm.value)\n    .then(\n      (value) => {\n        this.toggleForm();\n        this.userForm.reset();\n        alert(value);\n      },\n      (error) => {\n        alert(error);\n      }\n    )\n  }\n\n  ngOnInit(): void {\n    this.userForm = new FormGroup({\n      userName: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      secondName: new FormControl('', Validators.required),\n      age: new FormControl('', Validators.required),\n      country: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      cell: new FormControl('', Validators.required)\n    })\n  }\n\n}\n","<div class=\"new-user-container\">\n  <button (click)=\"toggleForm()\" class=\"add-new-user button\">+ Add New User</button>\n  <div *ngIf=\"openAddUser\" class=\"form-wrapper\">\n    <form [formGroup]=\"userForm\" class=\"form\">\n      <div class=\"input-block\">\n        <div><label for=\"\">Username:</label><input formControlName=\"userName\" type=\"text\" placeholder=\"User Name\" /></div>\n        <div><label for=\"\">Name:</label><input formControlName=\"name\" type=\"text\" placeholder=\"Name\" /></div>\n        <div><label for=\"\">Second Name:</label><input formControlName=\"secondName\"  type=\"text\" placeholder=\"Second Name\" /></div>\n        <div><label for=\"\">Age:</label><input formControlName=\"age\"  type=\"number\" placeholder=\"Age\" /></div>\n      </div>\n      <div class=\"input-block\">\n        <div><label for=\"\">Country:</label><input formControlName=\"country\" type=\"text\" placeholder=\"Country\" /></div>\n        <div><label for=\"\">City:</label><input formControlName=\"city\" type=\"text\" placeholder=\"City\" /></div>\n        <div><label for=\"\">Cell:</label><input formControlName=\"cell\"  type=\"text\" placeholder=\"Cell\" /></div>\n      </div>\n    </form>\n    <button [disabled]=\"!userForm.valid\" (click)=\"onSubmit()\" class=\"submit button\">Submit</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-view',\n  templateUrl: './profile-view.component.html',\n  styleUrls: ['./profile-view.component.scss']\n})\nexport class ProfileViewComponent implements OnInit {\n  @Input() active: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"profile-view-wrapper\">\n  <div class=\"profile-view\">\n    <div class=\"top-section\">\n      <div class=\"user-photo\">\n        <img src=\"{{active.picture.large}}\" alt=\"{{active.name.first}}'s profile photo\">\n      </div>\n    </div>\n    <div class=\"bottom-section\">\n      <div class=\"user-profile-full-wrapper\">\n        <div class=\"left-card-side\">\n          <div class=\"info-line\"><strong>Full Name:</strong> {{active.name.first}} {{active.name.last}}</div>\n          <div class=\"info-line\"><strong>Age:</strong> {{active.dob.age}}</div>\n          <div class=\"info-line\"><strong>Email:</strong> {{active.email}}</div>\n          <div class=\"info-line\"><strong>Cell:</strong> {{active.cell}}</div>\n        </div>\n        <div class=\"right-card-side\">\n          <div class=\"info-line\"><strong>Country:</strong> {{active.location.country}}</div>\n          <div class=\"info-line\"><strong>City:</strong> {{active.location.city}}</div>\n          <div class=\"info-line\"><strong>Username:</strong> {{active.login.username}}</div>\n          <div class=\"info-line\"><strong>Registered:</strong> {{active.registered.date | date:'longDate'}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { UsersApiService } from 'src/app/services/users-api.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n  @Input() user: any;\n\n  constructor(private usersApi:UsersApiService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-profile-wrapper\">\n  <img src=\"{{user.picture.thumbnail}}\" alt=\"{{user.name}}'s profile photo\">\n  <div class=\"user-details\">\n    <div><strong>Name:</strong> {{user.name.first}} {{user.name.last}}</div>\n    <div><strong>Country:</strong> {{user.location.country}}</div>\n    <div><strong>Cell:</strong> {{user.cell}}</div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersApiService {\n  usersData: any\n\n  constructor(private http:HttpClient) { }\n\n  getUsersDetails = () => {\n    return this.http.get('/api')\n      .toPromise()\n      .then((resp) => {this.usersData = resp;})\n      .catch(err => console.log(err));\n  }\n\n  addNewUser = (user) => {\n    return new Promise((resolve, reject) => {\n      if (!this.userNameUniqCheck(user.userName)) {\n        let newUser = {\n          email: user.email,\n          login: { username: user.userName},\n          cell: user.cell,\n          dob: { age: user.age },\n          name: { first: user.name, last: user.secondName },\n          location: { country: user.country, city: user.city },\n          picture: { large: 'assets/thumbnail.png', thumbnail: 'assets/thumbnail.png' },\n          registered: {date: new Date()}\n        }\n        this.usersData.results.push(newUser);\n        resolve(\"User was added successfully\")\n      } else {\n        reject(\"User with such username already exists\")\n      }\n      \n    })\n    \n  }\n\n  userNameUniqCheck = (username) => {\n    let userNameExists = false\n\n    if (this.usersData.results.some(elem => elem.login.username === username)) {\n      userNameExists = true;\n    }\n    return userNameExists;\n  }\n\n  //Assuming usernames are uniq\n  deleteUser = (username) => {\n    let index = this.usersData.results.findIndex(elem => elem.login.username == username)\n    this.usersData.results.splice(index, 1);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}